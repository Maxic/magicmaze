[gd_scene load_steps=4 format=2]

[sub_resource type="QuadMesh" id=1]
size = Vector2( 2, 2 )

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode unshaded, cull_disabled, depth_draw_opaque;

uniform float size;
uniform float width;
uniform vec4 inner_color: hint_color;
uniform vec4 outer_color: hint_color;

void fragment() {
	ALPHA = 0.0;
	vec2 uv = vec2(
		abs(UV.x - 0.5) * 2.0, 
		abs(UV.y - 0.5) * 2.0
	);
	
	uv = uv + ((sin(TIME*5.0) + 1.0) / 8f);

	float min_size = size - width;
	if ((uv.x > min_size || uv.y > min_size) && (uv.x < size && uv.y < size)) {
		vec4 color = mix(inner_color, outer_color, max(uv.x - min_size, uv.y - min_size) / width);
		ALPHA = color.a;
		ALBEDO = color.rgb;
	}
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/size = 1.0
shader_param/width = 0.1
shader_param/inner_color = Color( 0.537255, 0, 0.529412, 1 )
shader_param/outer_color = Color( 0.211765, 0, 0.262745, 1 )

[node name="Spatial" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, -0.5, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 3 )
