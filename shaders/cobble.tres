[gd_resource type="VisualShader" load_steps=15 format=2]

[ext_resource path="res://assets/cstone2.jpeg" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=36]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=37]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id=38]

[sub_resource type="VisualShaderNodeTransformConstant" id=39]
constant = Transform( 1, 0.707, 0, -0.707, 1, 0, 0, 0, 0, 0, 0, 0 )

[sub_resource type="VisualShaderNodeVectorInterp" id=40]

[sub_resource type="VisualShaderNodeVectorDecompose" id=41]

[sub_resource type="VisualShaderNodeInput" id=44]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id=45]

[sub_resource type="VisualShaderNodeInput" id=46]
input_name = "camera"

[sub_resource type="VisualShaderNodeScalarOp" id=47]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=49]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=53]
function = 0

[sub_resource type="VisualShaderNodeColorConstant" id=54]
constant = Color( 0.32549, 0.0745374, 0, 1 )

[resource]
code = "shader_type spatial;
render_mode specular_disabled;

uniform sampler2D tex_frg_53;



void vertex() {
// Output:0

}

void fragment() {
// Color:72
	vec3 n_out72p0 = vec3(0.325490, 0.074537, 0.000000);
	float n_out72p1 = 1.000000;

// Transform:56
	mat4 n_out56p0 = mat4(vec4(1.000000, -0.707000, 0.000000, 0.0), vec4(0.707000, 1.000000, 0.000000, 0.0), vec4(0.000000, 0.000000, 0.000000, 0.0), vec4(0.000000, 0.000000, 0.000000, 1.0));

// Input:54
	vec3 n_out54p0 = VERTEX;

// TransformVectorMult:55
	vec3 n_out55p0 = (n_out56p0 * vec4(n_out54p0, 1.0)).xyz;

// Texture:53
	vec4 tex_frg_53_read = texture(tex_frg_53, n_out55p0.xy);
	vec3 n_out53p0 = tex_frg_53_read.rgb;
	float n_out53p1 = tex_frg_53_read.a;

// Input:64
	mat4 n_out64p0 = CAMERA_MATRIX;

// Input:61
	vec3 n_out61p0 = VERTEX;

// TransformVectorMult:62
	vec3 n_out62p0 = (n_out64p0 * vec4(n_out61p0, 1.0)).xyz;

// VectorDecompose:58
	float n_out58p0 = n_out62p0.x;
	float n_out58p1 = n_out62p0.y;
	float n_out58p2 = n_out62p0.z;

// ScalarOp:65
	float n_in65p1 = 4.00000;
	float n_out65p0 = n_out58p1 * n_in65p1;

// VectorMix:57
	vec3 n_out57p0 = mix(n_out72p0, n_out53p0, vec3(n_out65p0));

// Output:0
	ALBEDO = n_out57p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 350.324, 85.7707 )
modes/specular = 4
nodes/fragment/0/position = Vector2( 1460, 380 )
nodes/fragment/53/node = SubResource( 36 )
nodes/fragment/53/position = Vector2( 786.304, 797.024 )
nodes/fragment/54/node = SubResource( 37 )
nodes/fragment/54/position = Vector2( 340, 1100 )
nodes/fragment/55/node = SubResource( 38 )
nodes/fragment/55/position = Vector2( 466.304, 857.024 )
nodes/fragment/56/node = SubResource( 39 )
nodes/fragment/56/position = Vector2( 106.304, 817.024 )
nodes/fragment/57/node = SubResource( 40 )
nodes/fragment/57/position = Vector2( 1260, 380 )
nodes/fragment/58/node = SubResource( 41 )
nodes/fragment/58/position = Vector2( 440, 480 )
nodes/fragment/61/node = SubResource( 44 )
nodes/fragment/61/position = Vector2( 120, 560 )
nodes/fragment/62/node = SubResource( 45 )
nodes/fragment/62/position = Vector2( 260, 300 )
nodes/fragment/64/node = SubResource( 46 )
nodes/fragment/64/position = Vector2( -60, 280 )
nodes/fragment/65/node = SubResource( 47 )
nodes/fragment/65/position = Vector2( 800, 480 )
nodes/fragment/67/node = SubResource( 49 )
nodes/fragment/67/position = Vector2( 20, 140 )
nodes/fragment/69/node = SubResource( 53 )
nodes/fragment/69/position = Vector2( 200, 140 )
nodes/fragment/72/node = SubResource( 54 )
nodes/fragment/72/position = Vector2( 960, 260 )
nodes/fragment/connections = PoolIntArray( 55, 0, 53, 0, 54, 0, 55, 1, 56, 0, 55, 0, 57, 0, 0, 0, 61, 0, 62, 1, 62, 0, 58, 0, 64, 0, 62, 0, 58, 1, 65, 0, 65, 0, 57, 2, 53, 0, 57, 1, 67, 0, 69, 0, 72, 0, 57, 0 )
