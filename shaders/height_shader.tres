[gd_resource type="VisualShader" load_steps=37 format=2]

[ext_resource path="res://assets/texture-g6ac2e1c8e_1920.jpeg" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
default_input_values = [ 0, 0.0, 1, 0.25 ]

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = SubResource( 3 )

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "camera"

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=8]

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=10]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorConstant" id=11]
constant = Color( 1, 0.082283, 0, 1 )

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "vertex"

[sub_resource type="VisualShaderNodeColorConstant" id=13]
constant = Color( 1, 0.816932, 0, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="OpenSimplexNoise" id=15]
octaves = 4
period = 69.0
lacunarity = 3.11

[sub_resource type="NoiseTexture" id=16]
seamless = true
noise = SubResource( 15 )

[sub_resource type="VisualShaderNodeTexture" id=17]
texture = SubResource( 16 )

[sub_resource type="VisualShaderNodeScalarOp" id=18]
default_input_values = [ 0, 0.0, 1, 0.3 ]

[sub_resource type="VisualShaderNodeTexture" id=19]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=20]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=21]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.3, 0.3, 0.3 ) ]
operator = 1

[sub_resource type="VisualShaderNodeTransformVecMult" id=22]

[sub_resource type="VisualShaderNodeTransformVecMult" id=23]

[sub_resource type="VisualShaderNodeTransformConstant" id=24]
constant = Transform( 1, 0.707, 0, -0.707, 1, 0, 0, 0, 0, 0, 0, 0 )

[sub_resource type="VisualShaderNodeVectorOp" id=25]
operator = 4

[sub_resource type="VisualShaderNodeScalarOp" id=26]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=27]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=28]

[sub_resource type="VisualShaderNodeScalarOp" id=29]
default_input_values = [ 0, 0.0, 1, -0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=30]
input_name = "camera"

[sub_resource type="VisualShaderNodeVectorDecompose" id=31]

[sub_resource type="VisualShaderNodeInput" id=32]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id=33]

[sub_resource type="VisualShaderNodeScalarOp" id=34]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=35]
output_port_for_preview = 0

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_33;
uniform sampler2D tex_frg_11;
uniform sampler2D tex_frg_35;



void vertex() {
// Output:0

}

void fragment() {
// Color:29
	vec3 n_out29p0 = vec3(1.000000, 0.082283, 0.000000);
	float n_out29p1 = 1.000000;

// Color:30
	vec3 n_out30p0 = vec3(1.000000, 0.816932, 0.000000);
	float n_out30p1 = 1.000000;

// Input:49
	mat4 n_out49p0 = CAMERA_MATRIX;

// Input:50
	vec3 n_out50p0 = VERTEX;

// TransformVectorMult:51
	vec3 n_out51p0 = (n_out49p0 * vec4(n_out50p0, 1.0)).xyz;

// Input:45
	float n_out45p0 = TIME;

// ScalarOp:52
	float n_in52p1 = 0.50000;
	float n_out52p0 = n_out45p0 * n_in52p1;

// ScalarOp:48
	float n_in48p1 = -0.10000;
	float n_out48p0 = n_out52p0 * n_in48p1;

// VectorOp:47
	vec3 n_out47p0 = n_out51p0 + vec3(n_out48p0);

// Texture:33
	vec4 tex_frg_33_read = texture(tex_frg_33, n_out47p0.xy);
	vec3 n_out33p0 = tex_frg_33_read.rgb;
	float n_out33p1 = tex_frg_33_read.a;

// Input:23
	vec3 n_out23p0 = VERTEX;

// Input:19
	float n_out19p0 = TIME;

// ScalarOp:44
	float n_in44p1 = 0.50000;
	float n_out44p0 = n_out19p0 * n_in44p1;

// ScalarOp:25
	float n_in25p1 = 0.10000;
	float n_out25p0 = n_out44p0 * n_in25p1;

// VectorOp:24
	vec3 n_out24p0 = n_out23p0 + vec3(n_out25p0);

// Texture:11
	vec4 tex_frg_11_read = texture(tex_frg_11, n_out24p0.xy);
	vec3 n_out11p0 = tex_frg_11_read.rgb;
	float n_out11p1 = tex_frg_11_read.a;

// VectorOp:43
	vec3 n_out43p0 = mod(n_out33p0, n_out11p0);

// ScalarOp:34
	float n_in34p1 = 0.30000;
	float n_out34p0 = dot(n_out43p0, vec3(0.333333, 0.333333, 0.333333)) + n_in34p1;

// VectorMix:26
	vec3 n_out26p0 = mix(n_out29p0, n_out30p0, vec3(n_out34p0));

// Transform:42
	mat4 n_out42p0 = mat4(vec4(1.000000, -0.707000, 0.000000, 0.0), vec4(0.707000, 1.000000, 0.000000, 0.0), vec4(0.000000, 0.000000, 0.000000, 0.0), vec4(0.000000, 0.000000, 0.000000, 1.0));

// Input:36
	vec3 n_out36p0 = VERTEX;

// TransformVectorMult:41
	vec3 n_out41p0 = (n_out42p0 * vec4(n_out36p0, 1.0)).xyz;

// Texture:35
	vec4 tex_frg_35_read = texture(tex_frg_35, n_out41p0.xy);
	vec3 n_out35p0 = tex_frg_35_read.rgb;
	float n_out35p1 = tex_frg_35_read.a;

// Input:2
	mat4 n_out2p0 = CAMERA_MATRIX;

// Input:3
	vec3 n_out3p0 = VERTEX;

// TransformVectorMult:4
	vec3 n_out4p0 = (n_out2p0 * vec4(n_out3p0, 1.0)).xyz;

// VectorDecompose:5
	float n_out5p0 = n_out4p0.x;
	float n_out5p1 = n_out4p0.y;
	float n_out5p2 = n_out4p0.z;

// ScalarOp:10
	float n_in10p1 = 0.25000;
	float n_out10p0 = n_out5p1 + n_in10p1;

// ScalarOp:31
	float n_in31p1 = 2.00000;
	float n_out31p0 = n_out10p0 * n_in31p1;

// VectorMix:8
	vec3 n_out8p0 = mix(n_out26p0, n_out35p0, vec3(n_out31p0));

// VectorOp:39
	vec3 n_in39p1 = vec3(0.30000, 0.30000, 0.30000);
	vec3 n_out39p0 = n_out8p0 - n_in39p1;

// Output:0
	ALBEDO = n_out39p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 125.858, -596.869 )
nodes/fragment/0/position = Vector2( 3000, -120 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( -540, 120 )
nodes/fragment/3/node = SubResource( 12 )
nodes/fragment/3/position = Vector2( -540, 280 )
nodes/fragment/4/node = SubResource( 22 )
nodes/fragment/4/position = Vector2( -180, 60 )
nodes/fragment/5/node = SubResource( 31 )
nodes/fragment/5/position = Vector2( 320, 80 )
nodes/fragment/8/node = SubResource( 35 )
nodes/fragment/8/position = Vector2( 2100, -120 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 880, 60 )
nodes/fragment/11/node = SubResource( 4 )
nodes/fragment/11/position = Vector2( -40, -700 )
nodes/fragment/19/node = SubResource( 5 )
nodes/fragment/19/position = Vector2( -1420, -200 )
nodes/fragment/23/node = SubResource( 7 )
nodes/fragment/23/position = Vector2( -1140, -440 )
nodes/fragment/24/node = SubResource( 8 )
nodes/fragment/24/position = Vector2( -440, -500 )
nodes/fragment/25/node = SubResource( 9 )
nodes/fragment/25/position = Vector2( -700, -200 )
nodes/fragment/26/node = SubResource( 10 )
nodes/fragment/26/position = Vector2( 1220, -440 )
nodes/fragment/29/node = SubResource( 11 )
nodes/fragment/29/position = Vector2( 1080, -660 )
nodes/fragment/30/node = SubResource( 13 )
nodes/fragment/30/position = Vector2( 760, -660 )
nodes/fragment/31/node = SubResource( 14 )
nodes/fragment/31/position = Vector2( 1420, 60 )
nodes/fragment/33/node = SubResource( 17 )
nodes/fragment/33/position = Vector2( -560, -1120 )
nodes/fragment/34/node = SubResource( 18 )
nodes/fragment/34/position = Vector2( 840, -440 )
nodes/fragment/35/node = SubResource( 19 )
nodes/fragment/35/position = Vector2( 1440, 500 )
nodes/fragment/36/node = SubResource( 20 )
nodes/fragment/36/position = Vector2( 100, 960 )
nodes/fragment/39/node = SubResource( 21 )
nodes/fragment/39/position = Vector2( 2520, -40 )
nodes/fragment/41/node = SubResource( 23 )
nodes/fragment/41/position = Vector2( 400, 600 )
nodes/fragment/42/node = SubResource( 24 )
nodes/fragment/42/position = Vector2( -540, 560 )
nodes/fragment/43/node = SubResource( 25 )
nodes/fragment/43/position = Vector2( 360, -920 )
nodes/fragment/44/node = SubResource( 26 )
nodes/fragment/44/position = Vector2( -1100, 20 )
nodes/fragment/45/node = SubResource( 27 )
nodes/fragment/45/position = Vector2( -2147.11, -757.388 )
nodes/fragment/47/node = SubResource( 28 )
nodes/fragment/47/position = Vector2( -1100, -1000 )
nodes/fragment/48/node = SubResource( 29 )
nodes/fragment/48/position = Vector2( -1440, -740 )
nodes/fragment/49/node = SubResource( 30 )
nodes/fragment/49/position = Vector2( -2426.25, -1112.69 )
nodes/fragment/50/node = SubResource( 32 )
nodes/fragment/50/position = Vector2( -2426.25, -952.692 )
nodes/fragment/51/node = SubResource( 33 )
nodes/fragment/51/position = Vector2( -2066.25, -1172.69 )
nodes/fragment/52/node = SubResource( 34 )
nodes/fragment/52/position = Vector2( -1820, -520 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 1, 4, 0, 5, 0, 3, 0, 4, 1, 4, 0, 5, 0, 5, 1, 10, 0, 24, 0, 11, 0, 25, 0, 24, 1, 2, 0, 4, 0, 29, 0, 26, 0, 30, 0, 26, 1, 26, 0, 8, 0, 23, 0, 24, 0, 31, 0, 8, 2, 10, 0, 31, 0, 8, 0, 39, 0, 39, 0, 0, 0, 35, 0, 8, 1, 36, 0, 41, 1, 41, 0, 35, 0, 42, 0, 41, 0, 33, 0, 43, 0, 11, 0, 43, 1, 43, 0, 34, 0, 34, 0, 26, 2, 3, 0, 4, 1, 4, 0, 5, 0, 3, 0, 4, 1, 4, 0, 5, 0, 24, 0, 11, 0, 2, 0, 4, 0, 26, 0, 8, 0, 31, 0, 8, 2, 8, 0, 39, 0, 39, 0, 0, 0, 42, 0, 41, 0, 33, 0, 43, 0, 43, 0, 34, 0, 48, 0, 47, 1, 47, 0, 33, 0, 50, 0, 51, 1, 50, 0, 51, 1, 49, 0, 51, 0, 50, 0, 51, 1, 50, 0, 51, 1, 49, 0, 51, 0, 51, 0, 47, 0, 45, 0, 52, 0, 52, 0, 48, 0, 19, 0, 44, 0, 44, 0, 25, 0 )
