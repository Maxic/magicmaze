[gd_resource type="VisualShader" load_steps=14 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 0.0, 1, 0.2 ]

[sub_resource type="OpenSimplexNoise" id=10]

[sub_resource type="NoiseTexture" id=11]
seamless = true
noise = SubResource( 10 )

[sub_resource type="VisualShaderNodeTexture" id=12]
texture = SubResource( 11 )

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
function = 0

[sub_resource type="VisualShaderNodeVectorInterp" id=15]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "camera"

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id=3]

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]

[sub_resource type="VisualShaderNodeColorConstant" id=5]

[sub_resource type="VisualShaderNodeVectorInterp" id=7]
output_port_for_preview = 0

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// Color:6
	vec3 n_out6p0 = vec3(1.000000, 1.000000, 1.000000);
	float n_out6p1 = 1.000000;

// VectorMix:8
	vec3 n_in8p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in8p2 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out8p0 = mix(n_in8p0, n_out6p0, n_in8p2);

// Output:0
	ALBEDO = n_out8p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -138, -281.67 )
nodes/fragment/0/position = Vector2( 1700, -140 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -540, 140 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -520, 400 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -180, 60 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 120, 340 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 320, 120 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 1240, -180 )
nodes/fragment/10/node = SubResource( 9 )
nodes/fragment/10/position = Vector2( 580, 500 )
nodes/fragment/11/node = SubResource( 12 )
nodes/fragment/11/position = Vector2( 160, -480 )
nodes/fragment/12/node = SubResource( 13 )
nodes/fragment/12/position = Vector2( 20, 760 )
nodes/fragment/13/node = SubResource( 14 )
nodes/fragment/13/position = Vector2( 420, 760 )
nodes/fragment/14/node = SubResource( 15 )
nodes/fragment/14/position = Vector2( 680, -380 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 3, 0, 4, 1, 4, 0, 5, 0, 6, 0, 8, 1, 8, 0, 0, 0, 2, 0, 4, 0, 3, 0, 4, 1, 4, 0, 5, 0, 6, 0, 8, 1, 8, 0, 0, 0, 5, 1, 10, 0, 12, 0, 13, 0 )
